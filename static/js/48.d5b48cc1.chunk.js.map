{"version":3,"file":"static/js/48.d5b48cc1.chunk.js","mappings":"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","sources":["features/upload-files/utils.ts","features/upload-files/config.ts","features/upload-files/api.ts","features/upload-files/worker.ts","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/harmony module decorator","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["import { ZIP_MAGIC } from \"./config\";\n\nexport const bytesToDecimal = (bytes: number[]) =>\n  (bytes[0] << 24) | (bytes[1] << 16) | (bytes[2] << 8) | bytes[3];\n\nexport type BinaryDescriptor = {\n  chunkLength: number;\n  name: string;\n  type: string;\n};\n\nexport type BinaryParsers = {\n  [key: string]: (array: number[]) => BinaryDescriptor;\n};\n\nexport const MIDI_PARSE = (array: number[]) => {\n  let chunkLength = 0;\n\n  let didReadTrackChunk = false;\n\n  for (let i = 0; ; i++) {\n    const hasFurtherMTrk =\n      array.slice(i, i + 4).join(\"\") === [0x4d, 0x54, 0x72, 0x6b].join(\"\");\n\n    if (didReadTrackChunk && !hasFurtherMTrk) {\n      break;\n    }\n\n    chunkLength++;\n\n    if (hasFurtherMTrk) {\n      const trackLength = 4 + bytesToDecimal(array.slice(i + 4, i + 4 + 4)) + 3;\n\n      didReadTrackChunk = true;\n      // read the MTrk\n      chunkLength += trackLength;\n\n      // offset current chunk\n      i += trackLength;\n    }\n  }\n\n  return {\n    chunkLength,\n    name: `${`${Date.now().toString()}_${Math.random()\n      .toString()\n      .slice(2)}`}.mid`,\n    type: \"audio/midi\",\n  };\n};\n\nexport const RIFF_PARSE = (array: number[]) => {\n  const chunkLength =\n    4 +\n    parseInt(\n      array\n        .slice(4, 4 + 4)\n        .reverse()\n        .map((value) => value.toString(16).padStart(2, \"0\"))\n        .join(\"\"),\n      16\n    );\n\n  return {\n    chunkLength: chunkLength,\n    name: `${`${Date.now().toString()}_${Math.random()\n      .toString()\n      .slice(2)}`}.wav`,\n    type: \"audio/wav\",\n  };\n};\n\nexport const isArchive = async (array: number[]) => {\n  return areMagicBytesSame(Array.from(array), ZIP_MAGIC);\n};\n\nexport const areMagicBytesSame = (array1: number[], array2: number[]) => {\n  return array1.every((value, index) => array2[index] === value);\n};\n\nexport const JPEG_PARSE = (array: number[]) => {\n  return {\n    chunkLength:\n      array.findIndex(\n        (_, index, array) => array[index] === 0xff && array[index + 1] === 0xd9\n      ) + 1,\n    name: `${`${Date.now().toString()}_${Math.random()\n      .toString()\n      .slice(2)}`}.jpg`,\n    type: \"image/jpeg\",\n  };\n};\n","import { BinaryParsers, JPEG_PARSE, MIDI_PARSE, RIFF_PARSE } from \"./utils\";\n\nexport const FIRST_4_BYTES = [0, 4];\nexport const FIRST_7_BYTES = [0, 7];\n\nexport const SOURCE_CODE_LINK =\n  \"https://github.com/thepicture/binary-extract-app\";\n\nexport const INITIAL_ZIP_LENGTH = 4;\n\nexport const ZIP_MAGIC = [0x50, 0x4b, 0x03, 0x04];\nexport const ZIP_MAGIC_END = [0x50, 0x4b, 0x05, 0x06];\n\nexport const BINARY_PARSERS: BinaryParsers = {\n  \"4d5d6864\": MIDI_PARSE,\n  \"4d546864\": MIDI_PARSE,\n  \"52494646\": RIFF_PARSE,\n  ffd8ffdb: JPEG_PARSE,\n  ffd8ffe0: JPEG_PARSE,\n  ffd8ffee: JPEG_PARSE,\n  ffd8ffe1: JPEG_PARSE,\n};\n\nexport const TEST_BINARY_3_MIDI_FILES = [\n  0x4d, 0x54, 0x68, 0x64, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x02, 0x01,\n  0x80, 0x4d, 0x54, 0x72, 0x6b, 0x00, 0x00, 0x00, 0x13, 0x00, 0xff, 0x58, 0x04,\n  0x01, 0x02, 0x18, 0x08, 0x00, 0xff, 0x51, 0x03, 0x08, 0x52, 0xae, 0x00, 0xff,\n  0x2f, 0x00, 0x4d, 0x54, 0x72, 0x6b, 0x00, 0x00, 0x00, 0x21, 0x00, 0xff, 0x03,\n  0x0e, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63, 0x20, 0x50, 0x69, 0x61,\n  0x6e, 0x6f, 0x00, 0xc0, 0x00, 0x00, 0x90, 0x30, 0x32, 0x60, 0x80, 0x30, 0x00,\n  0x00, 0xff, 0x2f, 0x00, 0x4d, 0x54, 0x68, 0x64, 0x00, 0x00, 0x00, 0x06, 0x00,\n  0x01, 0x00, 0x02, 0x01, 0x80, 0x4d, 0x54, 0x72, 0x6b, 0x00, 0x00, 0x00, 0x13,\n  0x00, 0xff, 0x58, 0x04, 0x01, 0x02, 0x18, 0x08, 0x00, 0xff, 0x51, 0x03, 0x08,\n  0x52, 0xae, 0x00, 0xff, 0x2f, 0x00, 0x4d, 0x54, 0x72, 0x6b, 0x00, 0x00, 0x00,\n  0x21, 0x00, 0xff, 0x03, 0x0e, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63,\n  0x20, 0x50, 0x69, 0x61, 0x6e, 0x6f, 0x00, 0xc0, 0x00, 0x00, 0x90, 0x30, 0x32,\n  0x60, 0x80, 0x30, 0x00, 0x00, 0xff, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x4d, 0x54, 0x68, 0x64, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01,\n  0x00, 0x02, 0x01, 0x80, 0x4d, 0x54, 0x72, 0x6b, 0x00, 0x00, 0x00, 0x13, 0x00,\n  0xff, 0x58, 0x04, 0x01, 0x02, 0x18, 0x08, 0x00, 0xff, 0x51, 0x03, 0x08, 0x52,\n  0xae, 0x00, 0xff, 0x2f, 0x00, 0x4d, 0x54, 0x72, 0x6b, 0x00, 0x00, 0x00, 0x21,\n  0x00, 0xff, 0x03, 0x0e, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63, 0x20,\n  0x50, 0x69, 0x61, 0x6e, 0x6f, 0x00, 0xc0, 0x00, 0x00, 0x90, 0x30, 0x32, 0x60,\n  0x80, 0x30, 0x00, 0x00, 0xff, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00,\n];\n\nexport const TEST_BINARY_MIDI_FILE = [\n  0x99, 0x98, 0x97, 0x4d, 0x54, 0x68, 0x64, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01,\n  0x00, 0x02, 0x01, 0x80, 0x4d, 0x54, 0x72, 0x6b, 0x00, 0x00, 0x00, 0x13, 0x00,\n  0xff, 0x58, 0x04, 0x01, 0x02, 0x18, 0x08, 0x00, 0xff, 0x51, 0x03, 0x08, 0x52,\n  0xae, 0x00, 0xff, 0x2f, 0x00, 0x4d, 0x54, 0x72, 0x6b, 0x00, 0x00, 0x00, 0x21,\n  0x00, 0xff, 0x03, 0x0e, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63, 0x20,\n  0x50, 0x69, 0x61, 0x6e, 0x6f, 0x00, 0xc0, 0x00, 0x00, 0x90, 0x30, 0x32, 0x60,\n  0x80, 0x30, 0x00, 0x00, 0xff, 0x2f, 0x00, 0x4d, 0x54, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00,\n];\n\nexport const ARCHIVE_WITH_1_FILE = [\n  0x50, 0x4b, 0x03, 0x04, 0x14, 0x00, 0x08, 0x00, 0x08, 0x00, 0x2e, 0xac, 0x64,\n  0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00,\n  0x05, 0x00, 0x20, 0x00, 0x31, 0x2e, 0x6d, 0x69, 0x64, 0x55, 0x54, 0x0d, 0x00,\n  0x07, 0x78, 0xff, 0x03, 0x64, 0x5c, 0x01, 0x04, 0x64, 0xb0, 0xff, 0x03, 0x64,\n  0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xe8, 0x03, 0x00, 0x00, 0x04, 0xe8, 0x03,\n  0x00, 0x00, 0xf3, 0x0d, 0xc9, 0x48, 0x61, 0x60, 0x60, 0x60, 0x63, 0x60, 0x64,\n  0x60, 0x62, 0x6c, 0xf0, 0x0d, 0x29, 0xca, 0x06, 0xf2, 0x84, 0x19, 0xfe, 0x47,\n  0xb0, 0x30, 0x32, 0x49, 0x70, 0x30, 0xfc, 0x0f, 0x64, 0xe6, 0x08, 0x5a, 0xc7,\n  0xf0, 0x5f, 0x9f, 0x01, 0x2a, 0xa5, 0xc8, 0xf0, 0x9f, 0x99, 0xcf, 0x35, 0x27,\n  0x35, 0xb9, 0xa4, 0x28, 0x33, 0x59, 0x21, 0x20, 0x33, 0x31, 0x2f, 0x9f, 0xe1,\n  0x00, 0x03, 0xc3, 0x04, 0x03, 0xa3, 0x84, 0x06, 0x03, 0x06, 0x90, 0x42, 0x00,\n  0x50, 0x4b, 0x07, 0x08, 0x3f, 0x47, 0x86, 0xfd, 0x4c, 0x00, 0x00, 0x00, 0x52,\n  0x00, 0x00, 0x00, 0x50, 0x4b, 0x01, 0x02, 0x14, 0x03, 0x14, 0x00, 0x08, 0x00,\n  0x08, 0x00, 0x2e, 0xac, 0x64, 0x56, 0x3f, 0x47, 0x86, 0xfd, 0x4c, 0x00, 0x00,\n  0x00, 0x52, 0x00, 0x00, 0x00, 0x05, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0xb4, 0x81, 0x00, 0x00, 0x00, 0x00, 0x31, 0x2e, 0x6d,\n  0x69, 0x64, 0x55, 0x54, 0x0d, 0x00, 0x07, 0x78, 0xff, 0x03, 0x64, 0x5c, 0x01,\n  0x04, 0x64, 0xb0, 0xff, 0x03, 0x64, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xe8,\n  0x03, 0x00, 0x00, 0x04, 0xe8, 0x03, 0x00, 0x00, 0x50, 0x4b, 0x05, 0x06, 0x00,\n  0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x53, 0x00, 0x00, 0x00, 0x9f, 0x00,\n  0x00, 0x00, 0x00, 0x00,\n];\n\nexport const ARCHIVE_WITH_3_FILES = [\n  0x50, 0x4b, 0x03, 0x04, 0x14, 0x00, 0x08, 0x00, 0x08, 0x00, 0x89, 0xb9, 0x64,\n  0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x03, 0x00, 0x00,\n  0x0a, 0x00, 0x20, 0x00, 0x33, 0x6d, 0x69, 0x64, 0x69, 0x66, 0x69, 0x6c, 0x65,\n  0x73, 0x55, 0x54, 0x0d, 0x00, 0x07, 0xa2, 0x16, 0x04, 0x64, 0xa3, 0x16, 0x04,\n  0x64, 0xa2, 0x16, 0x04, 0x64, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xe8, 0x03,\n  0x00, 0x00, 0x04, 0xe8, 0x03, 0x00, 0x00, 0xf3, 0x0d, 0xc9, 0x48, 0x61, 0x60,\n  0x60, 0x60, 0x63, 0x60, 0x64, 0x60, 0x62, 0x6c, 0xf0, 0x0d, 0x29, 0xca, 0x06,\n  0xf2, 0x84, 0x19, 0xfe, 0x47, 0xb0, 0x30, 0x32, 0x49, 0x70, 0x30, 0xfc, 0x0f,\n  0x64, 0xe6, 0x08, 0x5a, 0xc7, 0xf0, 0x5f, 0x9f, 0x01, 0x2a, 0xa5, 0xc8, 0xf0,\n  0x9f, 0x99, 0xcf, 0x35, 0x27, 0x35, 0xb9, 0xa4, 0x28, 0x33, 0x59, 0x21, 0x20,\n  0x33, 0x31, 0x2f, 0x9f, 0xe1, 0x00, 0x03, 0xc3, 0x04, 0x03, 0xa3, 0x84, 0x06,\n  0x03, 0x06, 0x88, 0x42, 0x6a, 0x9b, 0x38, 0xa0, 0x60, 0x98, 0x79, 0x67, 0x14,\n  0xe0, 0x03, 0x00, 0x50, 0x4b, 0x07, 0x08, 0x8e, 0xca, 0xd3, 0x2b, 0x57, 0x00,\n  0x00, 0x00, 0x0e, 0x03, 0x00, 0x00, 0x50, 0x4b, 0x01, 0x02, 0x14, 0x03, 0x14,\n  0x00, 0x08, 0x00, 0x08, 0x00, 0x89, 0xb9, 0x64, 0x56, 0x8e, 0xca, 0xd3, 0x2b,\n  0x57, 0x00, 0x00, 0x00, 0x0e, 0x03, 0x00, 0x00, 0x0a, 0x00, 0x20, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb4, 0x81, 0x00, 0x00, 0x00, 0x00,\n  0x33, 0x6d, 0x69, 0x64, 0x69, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x55, 0x54, 0x0d,\n  0x00, 0x07, 0xa2, 0x16, 0x04, 0x64, 0xa3, 0x16, 0x04, 0x64, 0xa2, 0x16, 0x04,\n  0x64, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xe8, 0x03, 0x00, 0x00, 0x04, 0xe8,\n  0x03, 0x00, 0x00, 0x50, 0x4b, 0x05, 0x06, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,\n  0x01, 0x00, 0x58, 0x00, 0x00, 0x00, 0xaf, 0x00, 0x00, 0x00, 0x00, 0x00,\n];\n\n// prettier-ignore\nexport const RIFF_BYTES = [\n  // RIFF header\n  0x52, 0x49, 0x46, 0x46,  // \"RIFF\"\n  0x24, 0x00, 0x00, 0x00,  // Chunk size (36 bytes total)\n  0x57, 0x41, 0x56, 0x45,  // \"WAVE\"\n\n  // Format subchunk\n  0x66, 0x6d, 0x74, 0x20,  // \"fmt \"\n  0x10, 0x00, 0x00, 0x00,  // Subchunk1 size (16 bytes)\n  0x01, 0x00,              // Audio format (PCM)\n  0x01, 0x00,              // Number of channels (1)\n  0x80, 0x3e, 0x00, 0x00,  // Sample rate (16kHz)\n  0x00, 0x7d, 0x00, 0x00,  // Byte rate (32000)\n  0x02, 0x00,              // Block align (2 bytes/sample)\n  0x10, 0x00,              // Bits per sample (16 bits)\n\n  // Data subchunk (16 bytes)\n  0x64, 0x61, 0x74, 0x61,  \n  0x10, 0x08, 0x00, 0x00,  \n  0x00, 0x00,              \n  0x00, 0x00,              \n  0xff, 0x7f,              \n  0xff, 0xff               \n];\n\nexport const JPEG_BYTES = [\n  0xff, 0xd8, 0xff, 0xee, 0xaa, 0xbb, 0xcc, 0xaa, 0xbb, 0xcc, 0xff, 0xd9,\n];\n","import { unzipRaw } from \"unzipit\";\n\nimport { BINARY_PARSERS, ZIP_MAGIC_END } from \"./config\";\nimport { areMagicBytesSame, isArchive } from \"./utils\";\n\nexport class BinaryParser extends EventTarget {\n  files: File[] = [];\n\n  async parseBinary(array: number[]): Promise<File[]> {\n    this.resetFiles();\n\n    await this.parseContent(array);\n\n    return this.files;\n  }\n\n  private async parseContent(array: number[]): Promise<void> {\n    for (let i = 0; i < array.length; i++) {\n      if (await isArchive(array.slice(i, i + 4))) {\n        for (let j = 0; ; j++) {\n          if (j > array.length) {\n            break;\n          }\n\n          try {\n            const chunkLength = getZipChunkLength(/* Start index */ i, array);\n\n            const zip = await unzipRaw(\n              new Uint8Array(array.slice(i, i + chunkLength + j))\n            );\n\n            const { entries } = zip;\n\n            for (const entry of entries) {\n              await this.parseContent(\n                Array.from(new Uint8Array(await entry.arrayBuffer()))\n              );\n            }\n\n            break;\n          } catch (error) {\n            continue;\n          }\n        }\n      }\n\n      const parseKey = array\n        .slice(i, i + 4)\n        .map((value) => value.toString(16).padStart(2, \"0\"))\n        .join(\"\");\n      const parse = BINARY_PARSERS[parseKey];\n\n      if (!parse) {\n        continue;\n      }\n\n      const { name, type, chunkLength } = parse(array.slice(i));\n\n      this.files.push(\n        new File([new Uint8Array(array.slice(i, i + chunkLength))], name, {\n          type,\n        })\n      );\n\n      i += chunkLength - 1;\n      this.dispatchEvent(\n        new CustomEvent(\"progress\", { detail: (i / array.length) * 100 })\n      );\n    }\n  }\n\n  private resetFiles() {\n    this.files = [];\n  }\n}\n\nconst getZipChunkLength = (startIndex: number, array: number[]) => {\n  let zipChunkLength = 3;\n\n  for (let i = startIndex; ; i++) {\n    zipChunkLength++;\n\n    if (areMagicBytesSame(array.slice(i, i + 4), ZIP_MAGIC_END)) {\n      break;\n    } else if (i > array.length) {\n      throw new RangeError(\"malformed zip file\");\n    }\n  }\n\n  return zipChunkLength;\n};\n","/* eslint-disable no-restricted-globals */\nimport { BinaryParser } from \"./api\";\n\nself.onmessage = async ({\n  data: { array },\n}: MessageEvent<{ array: number[]; parsedFiles: File[] }>) => {\n  const binaryParser = new BinaryParser();\n  binaryParser.addEventListener(\"progress\", (event: Event) => {\n    self.postMessage({\n      type: \"progress\",\n      message: (event as unknown as CustomEvent).detail,\n    });\n  });\n  const files = await binaryParser.parseBinary(array);\n\n  self.postMessage({ type: \"done\", message: files });\n};\n\nexport {};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [301], function() { return __webpack_require__(48); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"8a47a8a0\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.hmd = function(module) {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: function() {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/binary-extract-app/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t48: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkbinary_extract_app\"] = self[\"webpackChunkbinary_extract_app\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn __webpack_require__.e(301).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["MIDI_PARSE","array","bytes","chunkLength","didReadTrackChunk","i","hasFurtherMTrk","slice","join","trackLength","name","concat","Date","now","toString","Math","random","type","isArchive","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","areMagicBytesSame","Array","from","ZIP_MAGIC","stop","_x","apply","arguments","array1","array2","every","value","index","JPEG_PARSE","findIndex","_","ZIP_MAGIC_END","BINARY_PARSERS","parseInt","reverse","map","padStart","ffd8ffdb","ffd8ffe0","ffd8ffee","ffd8ffe1","BinaryParser","_EventTarget","_inherits","_super","_createSuper","_this","_classCallCheck","_len","length","args","_key","call","files","_createClass","key","_parseBinary","this","resetFiles","parseContent","_parseContent","_callee2","j","_chunkLength","zip","entries","_iterator","_step","entry","parseKey","parse","_parse","_context2","sent","getZipChunkLength","unzipRaw","Uint8Array","_createForOfIteratorHelper","s","n","done","t0","t1","t2","arrayBuffer","t3","t4","t5","t6","e","f","finish","t7","push","File","dispatchEvent","CustomEvent","detail","_x2","_wrapNativeSuper","EventTarget","startIndex","zipChunkLength","RangeError","self","onmessage","_ref2","binaryParser","data","addEventListener","event","postMessage","message","parseBinary","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","m","x","__webpack_exports__","O","deferred","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","splice","r","d","definition","o","defineProperty","enumerable","get","chunkId","Promise","all","reduce","promises","u","miniCssF","hmd","create","children","set","Error","obj","prop","prototype","hasOwnProperty","p","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","then"],"sourceRoot":""}